name: 🐍 Build & Publish Python Distributions to TestPyPI & PyPI

on: 
  push:
    branches:
      - main
    tags:
      - 'v*'

jobs:
  build:
    name: Build distribution 📦
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
      with:
        persist-credentials: false
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.10"
        
    - name: Upgrade pip and install build
      run: |
        python -m pip install --upgrade pip
        python -m pip install build --user
        
    - name: Build a binary wheel and a source tarball
      run: |
        python3 -m build
        echo "version=$(python setup.py --version)" >> $GITHUB_ENV
    - name: Store the distribution packages
      uses: actions/upload-artifact@v4
      with:
        name: python-package-distributions
        path: dist/

  publish-to-pypi:
    name: >-
      Publish Python 🐍 distribution 📦 to PyPI
    if: startsWith(github.ref, 'refs/tags/')  # only publish to PyPI on tag pushes
    needs:
    - build
    runs-on: ubuntu-latest

    permissions:
      id-token: write
    steps:
    - name: Download all the dists
      uses: actions/download-artifact@v4
      with:
        name: python-package-distributions
        path: dist/
    - name: Publish distribution 📦 to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1

  publish-to-testpypi:
    name: Publish Python 🐍 distribution 📦 to TestPyPI
    needs:
    - build
    runs-on: ubuntu-latest

    permissions:
      id-token: write  # IMPORTANT: mandatory for trusted publishing

    steps:
    - name: Download all the dists
      uses: actions/download-artifact@v4
      with:
        name: python-package-distributions
        path: dist/
    - name: Publish distribution 📦 to TestPyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        repository-url: https://test.pypi.org/legacy/

  github-release:
    if: startsWith(github.ref, 'refs/tags/')
    name: Create GitHub Release
    needs:
    - build
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: python-package-distributions
          path: dist/

      - name: Publish release 📦 to GitHub
        uses: softprops/action-gh-release@v2
        with:
          name: Release ${{ needs.build.outputs.version }}
          files: dist/*
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
